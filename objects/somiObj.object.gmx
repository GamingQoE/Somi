<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>nullSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_state = 0;// 0 - run Normal
            // 1 - paresh Normal
            // 2 - Air bala NOrmal
            // 3 - Air paeen NOrmal
            // 4 - forood normal
global.m_score = 0;
m_numLoveSign=0;
m_count=0;
m_numDeatchLoop=0;
m_numDamageLoop=0;
m_numDamageStarLoop=0;
m_a=30;
y=500;
m_id_body=instance_create(x,y,somiBodyObj);
m_id_head=instance_create(x,y,somiHeadObj);
m_id_hand=instance_create(x,y,somiHandObj);
m_id_leg=instance_create(x,y,somiLegObj);
m_id_gun=instance_create(x+15,y-33,gunObj);

image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// release space delay

    if(m_state==1)
    {
        m_a=0;  
        m_state=2;
        m_id_hand.sprite_index=somiAirNormalHandSpr;
        m_id_head.sprite_index=somiAirNormalHeadSpr;
        m_id_leg.sprite_index=somiAirNormalLegSpr;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// press space delay

    if(m_state==0 and sprite_index==nullSpr)
    {
        m_state = 1;
        m_id_hand.sprite_index=somiPareshNormalHandSpr;
        m_id_head.sprite_index=somiPareshNormalHeadSpr;
        m_id_leg.sprite_index=somiPareshNormalLegSpr;
        m_id_body.sprite_index=somiRunNormalBodySpr;
    
        if(instance_exists(record_log_ctrl))
            record_log_ctrl.numOfJump++
        
        if(instance_exists(record_log_detail_ctrl))
            record_log_detail_ctrl.alarm[0]=1
  
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///somiTouch release


if(global.__ANDROID__==1)
{
    if(m_state==1)
    {
        m_a=0;  
        m_state=2;
        m_id_hand.sprite_index=somiAirNormalHandSpr;
        m_id_head.sprite_index=somiAirNormalHeadSpr;
        m_id_leg.sprite_index=somiAirNormalLegSpr;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///somiTouch press

if(global.__ANDROID__==1)
{
    if(m_state==0 and sprite_index==nullSpr){
        m_state = 1;
        m_id_hand.sprite_index=somiPareshNormalHandSpr;
        m_id_head.sprite_index=somiPareshNormalHeadSpr;
        m_id_leg.sprite_index=somiPareshNormalLegSpr;
        m_id_body.sprite_index=somiRunNormalBodySpr;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room_restart();
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir kordan
if(sprite_index==nullSpr)
{
    sprite_index=somiDamageStarSpr;
    HUDHealthObj.image_index+=1;//vase cloud coment kardim
    
    if(HUDHealthObj.image_index&gt;3)
        HUDHealthObj.image_index=3;
        
    if(HUDHealthObj.image_index==4)
    {
        m_id_body.visible = false;
        m_id_head.visible = false;
        m_id_hand.visible = false;
        m_id_leg.visible = false;
        m_id_gun.visible = false;
        image_speed=1;
        sprite_index=somiDeathLoopSpr;
        somiObj.x +=60;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision with obstacle
if(sprite_index==nullSpr)
{   
    m_id_body.visible = false;
    m_id_head.visible = false;
    m_id_hand.visible = false;
    m_id_leg.visible = false;
    m_id_gun.visible = false;
    image_speed=1;
    sprite_index=somiDamage2Spr;
    
        if(instance_exists(record_log_ctrl))
            record_log_ctrl.numOfFallingDown++
            
        if(instance_exists(record_log_detail_ctrl))
        record_log_detail_ctrl.alarm[1]=1;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///payane air
m_state = 3 ;
m_id_hand.sprite_index=somiForoodNormalHandSpr;
m_id_head.sprite_index=somiForoodNormalHeadSpr;
m_id_leg.sprite_index=somiForoodNormalLegSpr;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message(string(global.level)+" "+string(backGroundObj.image_index));
m_id_body.image_xscale = image_xscale;
m_id_head.image_xscale = image_xscale;
m_id_hand.image_xscale = image_xscale;
m_id_leg.image_xscale = image_xscale;
m_id_gun.image_xscale = image_xscale;

m_id_body.y = y;
m_id_head.y= y;
m_id_hand.y = y;
m_id_leg.y = y;
m_id_gun.y = y-33;

// 0 - run Normal
// 1 - paresh Normal
// 2 - Air bala NOrmal
// 3 - Air paeen NOrmal
// 4 - forood normal

if(m_state == 3 or m_state == 2)//air paeen
{
    //y= y + 1+m_a;//3 1
    //m_a+=1.5 ;//2 1.5
    
    dy = 1+m_a;//3 1
    y = y+(dy* delta_time * 30 * 0.000001);
    m_a+=(1.5* delta_time * 30 * 0.000001) ;//2 1.5
}

if(m_state == 1)//ain bala 
{
    //y = y -1- m_a;//3 1 
    //m_a-=1.5 ;//2 1.4
    
    dy = 1+m_a;//3 1 
    y = y-(dy* delta_time * 30 * 0.000001);
    m_a-=(1.5* delta_time * 30 * 0.000001) ;//2 1.4
    
    if(m_a &lt;= 0)
    {
        m_state=2;
        m_id_hand.sprite_index=somiAirNormalHandSpr;
        m_id_head.sprite_index=somiAirNormalHeadSpr;
        m_id_leg.sprite_index=somiAirNormalLegSpr;
    }
}
if(y &gt; 500 and m_state==3)
{//when back on the ground
    m_state=0;
    m_a=30;//30
    y=500;
    m_id_hand.sprite_index=somiRunNormalHandSpr;
    m_id_head.sprite_index=somiRunNormalHeadSpr;
    m_id_leg.sprite_index=somiRunNormalLegSpr;
}


if(sprite_index==somiDeathSpr)
{
    image_speed=0.5;
    
    if(image_index &gt; 20)
    {
        speedCtrl.m_speed=0;
        if(alarm[3] == -1 )
            alarm[3]=30;
    }
    else if(image_index &gt; 18)
        speedCtrl.m_speed=0.1;
    else if(image_index &gt; 15)
        speedCtrl.m_speed=0.15;
    else if(image_index &gt; 12)
        speedCtrl.m_speed=0.2;
    else if(image_index &gt; 10)
        speedCtrl.m_speed=0.3;
    else if(image_index &gt; 7)
        speedCtrl.m_speed=0.4;
    else if(image_index &gt; 4)
        speedCtrl.m_speed=.5;
    else if(image_index &gt; 1)
        speedCtrl.m_speed=1;  
}
//set heavy run when bazooca
if(m_state==0)
{
    if(gunObj.sprite_index==gunBazoocaSpr)
    {
        somiBodyObj.sprite_index=somiRunHeavyBodySpr;
        somiHandObj.sprite_index=somiRunHeavyHandSpr;
        somiHeadObj.sprite_index=somiRunHeavyHeadSpr;
        somiLegObj.sprite_index=somiRunHeavyLegSpr;
        gunObj.x = somiObj.x - 15; 
    }
    else
    {
        somiBodyObj.sprite_index=somiRunNormalBodySpr;
        somiHandObj.sprite_index=somiRunNormalHandSpr;
        somiHeadObj.sprite_index=somiRunNormalHeadSpr;
        somiLegObj.sprite_index=somiRunNormalLegSpr;
        gunObj.x = somiObj.x + 15;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index=somiDeathLoopSpr)
        m_numDeatchLoop+=1;
else if(sprite_index=somiDeathSpr)
{
    image_index=21;
}
else if(sprite_index=somiDamage2Spr)
{
    m_id_body.visible = true;
    m_id_head.visible = true;
    m_id_hand.visible = true;
    m_id_leg.visible = true;
    m_id_gun.visible = true;
    sprite_index=nullSpr;
    image_speed=1;    
}
else if(sprite_index=somiDamageStarSpr)
{
    m_numDamageStarLoop+=1;
}
if(m_numDamageStarLoop &gt; 2)
{
    m_numDamageStarLoop=0;
    sprite_index=nullSpr;
}
if(m_numDamageLoop &gt; 1)
{
    m_numDamageLoop=0;
    sprite_index=somiDamageLastSpr;
}
if(m_numDeatchLoop &gt; 3)
{
    m_numDeatchLoop=0;
    sprite_index=somiDeathSpr;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay_base_frame = setupGame_ctrl.m_delay_amount / 33;

if(delay_base_frame == 0)
{
    if(m_state==0 and sprite_index==nullSpr)
    {
        m_state = 1;
        m_id_hand.sprite_index=somiPareshNormalHandSpr;
        m_id_head.sprite_index=somiPareshNormalHeadSpr;
        m_id_leg.sprite_index=somiPareshNormalLegSpr;
        m_id_body.sprite_index=somiRunNormalBodySpr;
    
        if(instance_exists(record_log_ctrl))
            record_log_ctrl.numOfJump++
        
        if(instance_exists(record_log_detail_ctrl))
            record_log_detail_ctrl.alarm[0]=1
  
    }
}
else
{
    if(alarm[6] == -1)
        alarm[6]=delay_base_frame;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay_base_frame = setupGame_ctrl.m_delay_amount / 33;

if(delay_base_frame == 0)
{
    if(m_state==1)
    {
        m_a=0;  
        m_state=2;
        m_id_hand.sprite_index=somiAirNormalHandSpr;
        m_id_head.sprite_index=somiAirNormalHeadSpr;
        m_id_leg.sprite_index=somiAirNormalLegSpr;
    }

}
else
{
    if(alarm[7] == -1)
        alarm[7]=delay_base_frame;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
