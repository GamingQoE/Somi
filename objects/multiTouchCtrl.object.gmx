<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_x1=0;
m_y1=0;

m_x2=0;
m_y2=0;


m_jump=0;
m_a=instance_create(1080,598,exitTouchObj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 2; i += 1; ) //checks each touch event from 1 - 5
{
    if device_mouse_check_button(i, mb_left) //if this touch event is active (ie if player is touching)
    {
        if(i==0)
        {
            m_x1=device_mouse_x(i);
            m_y1=device_mouse_y(i);
        }
        if(i==1)
        {
            m_x2=device_mouse_x(i);
            m_y2=device_mouse_y(i);
        }
        if(device_mouse_x(i) &lt; 300)
        {
            if(m_jump = 0)
            {
                m_jump=1;
                somiObj.alarm[4]=1;
            }
        }
    }
}

if (!device_mouse_check_button(0, mb_left) and !device_mouse_check_button(1, mb_left))
{
    m_jump=0;
    somiObj.alarm[5]=1;   
}

if (!device_mouse_check_button(0, mb_left) and 
device_mouse_check_button(1, mb_left)) and
device_mouse_x(1) &gt; 300
{
    m_jump=0;
    somiObj.alarm[5]=1;   
}
if (!device_mouse_check_button(1, mb_left) and 
device_mouse_check_button(0, mb_left)) and
device_mouse_x(0) &gt; 300
{
    m_jump=0;
    somiObj.alarm[5]=1;   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
